const mapTwoMin = [
	[1, 0, 0, 0, 0, 0, 0, 2],
	[0, 2, 0, 0, 0, 0, 1, 0],
	[1, 0, 1, 0, 0, 2, 4, 2],
	[0, 2, 0, 0, 0, 0, 1, 0],
	[1, 0, 1, 0, 0, 2, 0, 2],
	[0, 2, 0, 0, 0, 0, 1, 0],
	[1, 0, 1, 0, 0, 2, 0, 2],
	[0, 2, 0, 0, 0, 0, 1, 0],
	[1, 0, 0, 0, 0, 0, 0, 2],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 3, 0, 0, 0, 0, 3, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[1, 0, 1, 0, 0, 1, 0, 1],
	[0, 2, 0, 0, 0, 0, 2, 0],
	[1, 0, 1, 0, 0, 1, 0, 1],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 2, 0, 0, 0, 0, 2, 0],
	[1, 4, 1, 0, 0, 1, 0, 1],
	[0, 2, 0, 0, 0, 0, 2, 0],
	[1, 0, 1, 0, 0, 1, 0, 1],
	[0, 2, 0, 0, 0, 0, 2, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 0, 2, 0, 2, 0, 2, 0],
	[0, 1, 0, 1, 0, 1, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 2, 0, 2, 0, 2, 0],
	[0, 1, 0, 1, 0, 1, 0, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[1, 0, 2, 0, 0, 1, 0, 2],
	[1, 0, 2, 0, 0, 1, 4, 2],
	[1, 0, 2, 0, 0, 1, 0, 2],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 1, 0, 1, 2, 0, 2, 0],
	[0, 0, 3, 0, 0, 1, 0, 0],
	[0, 1, 0, 1, 2, 0, 2, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 0, 0, 0, 0, 0, 1, 0],
	[0, 0, 0, 0, 0, 1, 2, 1],
	[0, 0, 0, 0, 0, 1, 2, 1],
	[0, 0, 0, 0, 0, 4, 1, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 2, 0, 0, 0, 0],
	[0, 0, 0, 0, 2, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 1, 0, 0, 0, 0, 0, 0],
	[1, 2, 1, 0, 0, 0, 0, 0],
	[1, 2, 1, 0, 0, 0, 0, 0],
	[0, 1, 0, 0, 0, 0, 0, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 0, 0, 0, 0, 0, 2, 0],
	[0, 0, 0, 0, 0, 1, 0, 1],
	[0, 0, 0, 0, 0, 0, 2, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 2, 0],
	[0, 0, 0, 0, 0, 1, 0, 1],
	[0, 0, 0, 0, 0, 0, 3, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 2, 0],
	[0, 0, 0, 0, 0, 1, 0, 1],
	[0, 0, 0, 0, 0, 0, 2, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 2, 0, 2, 0, 0, 0, 0],
	[1, 0, 1, 0, 1, 0, 0, 0],
	[0, 2, 0, 2, 0, 0, 0, 0],
	[1, 4, 1, 0, 1, 0, 0, 0],
	[0, 2, 0, 2, 0, 0, 0, 0],
	[1, 0, 1, 0, 1, 0, 0, 0],
	[0, 2, 0, 2, 0, 0, 0, 0],
	[1, 0, 1, 0, 1, 0, 0, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[2, 0, 2, 0, 0, 1, 0, 1],
	[0, 1, 0, 0, 0, 0, 2, 0],
	[2, 0, 2, 0, 0, 1, 0, 1],

	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 2, 0, 0, 0, 0, 1, 0],
	[1, 0, 1, 0, 0, 2, 4, 2],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[1, 0, 1, 0, 0, 2, 0, 2],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[1, 0, 1, 0, 0, 2, 0, 2],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[1, 0, 1, 0, 0, 2, 0, 2],
	[0, 3, 0, 0, 0, 0, 1, 0],
	[1, 0, 1, 0, 0, 2, 0, 2],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 0, 0, 2, 2, 0, 1, 1],
	[0, 0, 0, 2, 2, 0, 1, 1],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 0, 0, 0, 1, 2, 2, 1],
	[0, 0, 0, 0, 2, 1, 1, 2],
	[2, 1, 1, 2, 2, 1, 1, 2],
	[1, 2, 2, 1, 1, 2, 2, 1],
	[1, 2, 2, 1, 0, 0, 4, 0],
	[2, 1, 1, 2, 0, 0, 0, 0],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],

	[0, 0, 0, 0, 0, 1, 2, 1],
	[0, 0, 0, 0, 0, 2, 3, 2],
	[0, 0, 0, 0, 0, 1, 2, 1],

	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0]
], mapFiveMin = [
	[0, 0, 0, 0, 0, 0, 0, 0]
];

module.exports = {

gridWidth: false,
tempMap: false,

addRow(){
	const currentRow = this.tempMap[this.tempMap.length - 1], thisObj = this;
	for(i = 0; i < currentRow.length; i++){
		switch(currentRow[i]){
			case 1: thisObj.buildBlock(i, '0'); break;
			case 2: thisObj.buildBlock(i, '1'); break;
			case 3: thisObj.buildBlock(i, '2'); break;
			case 4: thisObj.buildBlock(i, '3'); break;
		}
	}
	this.tempMap.splice(this.tempMap.length - 1, 1)
},

buildBlock(index, img){
	const block = PIXI.Sprite.fromImage('img/map/block-' + img + '.png'), size = 40;
	block.anchor.set(.5);
	block.y = -size;
	block.x = globals.gameX + this.gridWidth * index + globals.grid + size / 2;
	block.zOrder = 15;
	block.type = 'mapBlock';
	block.growing = true;
	block.growSeed = Math.floor(Math.random() * 45);
	block.clock = 0;
	block.health = img == '3' ? 15 : 2;
	if(img == '2') block.power = true;
	else if(img == '3'){
		block.special = true;
		block.hitCount = 0;
		block.alpha = 0;
	} else if(img != '2') block.rotation = Math.random() * Math.PI;
	globals.game.stage.addChild(block);
},

updateMap(){
	if(globals.gameClock % 28 == 0 && this.tempMap.length) this.addRow();
},

updateBlock(block, index){
	block.y += 1.5;
	block.zOrder -= 0.001;
	if(block.clock >= block.growSeed && !block.special){
		const mod = 0.0025;
		if((block.growing && block.scale.x >= 1.2) || (!block.growing && block.scale.x <= 1)) block.growing = !block.growing;
		const diff = block.growing ? mod : -mod;
		block.scale.set(block.scale.x + diff);
	}
	block.clock++;
	if(block.baseY > globals.gameHeight || block.hit) globals.game.stage.removeChildAt(index);
},

update(){
	if(!globals.paused) this.updateMap();
	if(!globals.stageFinished) enemies.currentWave();
},

init(){
	this.tempMap = mapTwoMin.slice(0);
	this.gridWidth = (globals.gameWidth - globals.grid * 2) / this.tempMap[0].length;
}

};